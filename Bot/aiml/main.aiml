<?xml version='1.0' encoding='UTF-8'?>
<aiml version='2.1'>
	<category>
		<pattern>OOB START</pattern>
		<template><oob><tasconnect/></oob></template>
	</category>

	<category>
		<pattern>OOB DefuserSocketconnected</pattern>
		<template>
			Connected.
			<condition name='simulation' value='true'><srai>test start</srai></condition>
		</template>
	</category>

	<category>
		<pattern>OOB DefuserSocketError No connection could be made because the target machine actively refused it</pattern>
		<template>
			<think><set name='simulation'>true</set></think>
			<oob><tasconnect simulation='true'/></oob>
		</template>
	</category>

	<category>
		<pattern>module <set>number</set></pattern>
		<template>
			<condition>
				<name>Module<star/>Type</name>
				<li value='unknown'>There do not seem to be that many modules.</li>
				<li><srai>SelectModuleAsync SelectingModule <star/> XS <star/></srai></li>
			</condition>
		</template>
	</category>
	<category>
		<pattern>SelectModuleDone SelectingModule *</pattern>
		<template>
			<!-- This will take a fraction of a second to move the bomb. Usually this can be ignored, but maybe not for modules we read automatically. -->
			<srai>SelectingModule <get><name>Module<star/>Type</name></get></srai>
		</template>
	</category>

	<!-- Usage: SelectModule [module ID] XS [topic] XS [grammar name] XS [description] -->
	<!-- Usage: SelectModule [module ID] XS [topic] XS [description] -->
	<!-- Usage: SelectModule [module ID] XS [topic] -->
	<!-- Usage: SelectModule [topic] XS [grammar name] XS [description] -->
	<!-- Usage: SelectModule [topic] XS [description] -->
	<!-- Usage: SelectModule [topic] -->
	<!-- Module ID defaults to <get name='module'/>; grammar name defaults to first word of topic;
		description is how the bot will describe the module (e.g. 'a Button') and defaults to topic -->
	<!-- Event: ModuleDeselected -->
	<!-- Called just before the topic is changed. -->
	<!-- Event: ModuleSelected -->
	<!-- Called just after the topic is changed. -->
	<category>
		<pattern>SelectModule <set>number</set> XS * XS * XS *</pattern>
		<template>
			<think>
				<set name='lastmodule'><get name='module'/></set>
				<set name='lasttopic'><get name='topic'/></set>
				<set var='description'><star index='4'/></set>
			</think>
			<condition name='module'><li value='unknown'></li>
				<li><srai>CallEvent ModuleDeselected</srai></li>
			</condition>
			<think><set name='topic'><star index='2'/></set></think>
			<oob><setgrammar><star index='3'/></setgrammar></oob>
			<condition var='description'>
				<li value='nil'></li>
				<li>Module <set name='module'><star/></set> is <star index='4'/>.</li>
			</condition>
			<srai>CallEvent ModuleSelected</srai>
		</template>
	</category>
	<category>
		<pattern>SelectModule <set>number</set> XS * XS *</pattern>
		<template><srai>SelectModule <star/> XS <star index='2'/> XS <first><star index='2'/></first> XS <star index='3'/></srai></template>
	</category>
	<category>
		<pattern>SelectModule <set>number</set> XS *</pattern>
		<template><srai>SelectModule <star/> XS <star index='2'/> XS <first><star index='2'/></first> XS <star index='2'/></srai></template>
	</category>
	<category>
		<pattern>SelectModule * XS * XS *</pattern>
		<template><srai>SelectModule <get name='module'/> XS <star/> XS <star index='2'/> XS <star index='3'/></srai></template>
	</category>
	<category>
		<pattern>SelectModule * XS *</pattern>
		<template><srai>SelectModule <get name='module'/> XS <star/> XS <first><star/></first> XS <star index='2'/></srai></template>
	</category>
	<category>
		<pattern>SelectModule *</pattern>
		<template><srai>SelectModule <get name='module'/> XS <star/> XS <first><star/></first> XS <star/></srai></template>
	</category>
	<category>
		<pattern>SelectModule unknown ^</pattern>
		<template></template>
	</category>
	<!-- Usage: DeselectModule -->
	<category>
		<pattern>DeselectModule</pattern>
		<template>
			<condition name='module'><li value='unknown'></li>
				<li>
					<srai>CallEvent ModuleDeselected</srai>
					<oob><setgrammar>bomb</setgrammar></oob>
					<set name='topic'>unknown</set>
					<set name='module'>unknown</set>
				</li>
			</condition>
		</template>
	</category>

	<!-- Usage: SelectFaceAsync [token] XS [side] XS [align mode] -->
	<!-- Turns the bomb to the specified side. Calls SelectFaceDone with the specified token when done. This will deselect a module if it is not on the specified side. -->
	<!-- Align modes: nil: don't align; align: align the bomb after turning; widgets: screenshot widgets on the intermediate face and align -->
	<category>
		<pattern>SelectFaceAsync * XS * XS *</pattern>
		<template>
			<condition name='SelectedFace'>
				<li><value><star index='2'/></value>
					<!-- The requested side is already selected; do nothing. -->
					<srai>SelectFaceDone <star/></srai>
				</li>
				<li>
					<oob><sendinputs>rx:1</sendinputs></oob>
					<oob><timer duration='0.5'><postback>SelectFace <star/> XS <star index='2'/> XS <star index='3'/></postback></timer></oob>
				</li>
			</condition>
		</template>
	</category>
	<category>
		<pattern>SelectFaceAsync * XS * XS widgets</pattern>
		<template>
			<oob><sendinputs>rx:1</sendinputs></oob>
			<oob><timer duration='0.375'><postback>WidgetCheck <star/> XS <star index='2'/></postback></timer></oob>
		</template>
	</category>
	<category>
		<pattern>OOB Tick WidgetCheck * XS *</pattern>
		<template>
			<oob><sendinputs>rx:0</sendinputs></oob>
			<oob><takescreenshot><token>WidgetCheck <star/> XS <star index='2'/></token></takescreenshot></oob>
		</template>
	</category>
	<category>
		<pattern>OOB ScreenshotReady WidgetCheck * XS * *</pattern>
		<template>
			<srai>WidgetCallback <star/> XS <star index='3'/></srai>
			<oob><sendinputs>rx:1</sendinputs></oob>
			<oob><timer duration='0.125'><postback>SelectFace <star/> XS <star index='2'/> XS align</postback></timer></oob>
		</template>
	</category>
	<category>
		<pattern>OOB Tick SelectFace * XS * XS *</pattern>
		<template>
			<think>
				<set var='alignmode'><star index='3'/></set>
				<set name='SelectedFace'><star index='2'/></set>
				<set name='FocusState'>bomb</set>
				<set name='module'>nil</set>
			</think>
			<condition var='alignmode'>
				<li value='align'>
					<!-- Correct the bomb rotation. -->
					<condition>
						<name>FaceHasModules<star index='2'/></name>
						<li value='true'>
							<!-- If the face we're moving to is known to have modules on it, pressing A B is faster. -->
							<oob><sendinputs>rx:0 a b</sendinputs></oob>
							<oob><timer duration='0.5'><postback>SelectFaceAsync2 <star/></postback></timer></oob>
						</li>
						<li>
							<oob><sendinputs>rx:0 b a</sendinputs></oob>
							<oob><timer duration='1.5'><postback>SelectFaceAsync2 <star/></postback></timer></oob>
						</li>
					</condition>
				</li>
				<li>
					<oob><sendinputs>rx:0</sendinputs></oob>
					<srai>SelectFaceDone <star/></srai>
				</li>
			</condition>
		</template>
	</category>
	<category>
		<pattern>OOB Tick SelectFaceAsync2 *</pattern>
		<template><srai>SelectFaceDone <star/></srai></template>
	</category>

	<!-- Usage: SelectModuleAsync [token] XS [module] -->
	<!-- Selects the specified slot. Calls SelectModuleDone with the specified token when done. -->
	<category>
		<pattern>SelectModuleAsync * XS *</pattern>
		<template>
			<condition name='module'>
				<li><value><star index='2'/></value>
					<!-- The requested module is already selected. -->
					<srai>SelectModuleDone <star/></srai>
				</li>
				<li>
					<!-- Select the requested side if necessary. -->
					<srai>SelectFaceAsync SelectModule <star/> XXS <star index='2'/> XS <srai>XSlotFace <get><name>Module<star index='2'/>Slot</name></get></srai> XS false</srai>
				</li>
			</condition>
		</template>
	</category>
	<category>
		<pattern>SelectFaceDone SelectModule * XXS *</pattern>
		<template>
			<!-- If another module is selected, deselect it first. -->
			<condition name='FocusState' value='module'>
				<oob><sendinputs>b</sendinputs></oob>
			</condition>
			<!-- Move to the right row. -->
			<think>
				<set var='ytarget'><srai>XSlotY <get><name>Module<star index='2'/>Slot</name></get></srai></set>
				<set var='d'><srai>XSubtract <get var='ytarget'/> XS <srai>XSlotY <get><name>SelectedSlot<get name='SelectedFace'/></name></get></srai></srai></set>
				<set var='isPositive'><srai>XIsNumber <get var='d'/></srai></set>
			</think>
			<condition var='d'>
				<li value='0'></li>
				<li>
					<condition var='isPositive'>
						<li value='true'><srai>ProcessRowChange down</srai></li>
						<li><srai>ProcessRowChange up</srai></li>
					</condition>
					<think><set var='d'><srai>XSubtract <get var='ytarget'/> XS <srai>XSlotY <get><name>SelectedSlot<get name='SelectedFace'/></name></get></srai></srai></set></think>
					<loop/>
				</li>
			</condition>
			<!-- Move to the right space. -->
			<think>
				<set var='xtarget'><srai>XSlotX <get><name>Module<star index='2'/>Slot</name></get></srai></set>
				<set var='d'><srai>XSubtract <get var='xtarget'/> XS <srai>XSlotX <get><name>SelectedSlot<get name='SelectedFace'/></name></get></srai></srai></set>
				<set var='isPositive'><srai>XIsNumber <get var='d'/></srai></set>
			</think>
			<condition var='d'>
				<li value='0'></li>
				<li>
					<condition var='isPositive'>
						<li value='true'><srai>ProcessColChange right</srai></li>
						<li><srai>ProcessColChange left</srai></li>
					</condition>
					<think><set var='d'><srai>XSubtract <get var='xtarget'/> XS <srai>XSlotX <get><name>SelectedSlot<get name='SelectedFace'/></name></get></srai></srai></set></think>
					<loop/>
				</li>
			</condition>
			<think>
				<set name='focusstate'>module</set>
				<set name='module'><star index='2'/></set>
			</think>
			<oob><sendinputs>a</sendinputs></oob>
			<srai>SelectModuleDone <star/></srai>
		</template>
	</category>
	<category>
		<pattern>ProcessRowChange *<!--direction--></pattern>
		<template>
			<oob><sendinputs><star/></sendinputs></oob>
			<!-- Find which slot this will select. -->
			<think>
				<set var='direction'><star/></set>
				<set var='x'><srai>XSlotX <get><name>SelectedSlot<get name='SelectedFace'/></name></get></srai></set>
				<set var='y'><srai>XSlotY <get><name>SelectedSlot<get name='SelectedFace'/></name></get></srai></set>
				<set var='y'>
					<condition var='direction'>
						<li value='up'><map name='predecessor'><get var='y'/></map></li>
						<li><map name='successor'><get var='y'/></map></li>
					</condition>
				</set>
				<gossip>Starting at <get name='SelectedFace'/> <get var='x'/> <get var='y'/></gossip>
				<set var='x1'><get var='x'/></set>
				<set var='x2'><get var='x'/></set>
				<set var='found'>nil</set>
				<condition var='found' value='nil'>
					<condition>
						<name>Slot<get name='SelectedFace'/> <get var='x1'/> <get var='y'/>Type</name>
						<li value='unknown'></li>
						<li value='nil'></li>
						<li><set var='found'><get var='x1'/></set></li>
					</condition>
					<condition var='found' value='nil'>
						<condition>
							<name>Slot<get name='SelectedFace'/> <get var='x2'/> <get var='y'/>Type</name>
							<li value='unknown'></li>
							<li value='nil'></li>
							<li><set var='found'><get var='x2'/></set></li>
						</condition>
					</condition>
					<condition var='found' value='nil'>
						<set var='x1'><map name='predecessor'><get var='x1'/></map></set>
						<set var='x2'><map name='successor'><get var='x2'/></map></set>
					</condition>
					<loop/>
				</condition>
				<set><name>SelectedSlot<get name='SelectedFace'/></name><get name='SelectedFace'/> <get var='found'/> <get var='y'/></set>
				<gossip>Selected slot: <get name='SelectedFace'/> <get var='found'/> <get var='y'/></gossip>
			</think>
		</template>
	</category>
	<category>
		<pattern>ProcessColChange *<!--direction--></pattern>
		<template>
			<oob><sendinputs><star/></sendinputs></oob>
			<!-- Find which slot this will select. -->
			<think>
				<set var='direction'><star/></set>
				<set var='x'><srai>XSlotX <get><name>SelectedSlot<get name='SelectedFace'/></name></get></srai></set>
				<set var='y'><srai>XSlotY <get><name>SelectedSlot<get name='SelectedFace'/></name></get></srai></set>
				<set var='break'>false</set>
				<!-- Find the next selectable in that direction. -->
				<condition var='break' value='false'>
					<set var='x'>
						<condition var='direction'>
							<li value='left'><map name='predecessor'><get var='x'/></map></li>
							<li><map name='successor'><get var='x'/></map></li>
						</condition>
					</set>
					<condition>
						<name>Slot<get name='SelectedFace'/> <get var='x'/> <get var='y'/>Type</name>
						<li value='unknown'></li>
						<li value='nil'></li>
						<li><set var='break'>true</set></li>
					</condition>
					<loop/>
				</condition>
				<set><name>SelectedSlot<get name='SelectedFace'/></name><get name='SelectedFace'/> <get var='x'/> <get var='y'/></set>
				<gossip>Selected slot: <get name='SelectedFace'/> <get var='x'/> <get var='y'/></gossip>
			</think>
		</template>
	</category>

	<category>
		<pattern>SetTimer *</pattern>
		<template>
			<think>
				<set name='timer'><star/>000</set>
				<set name='timerstamp'><sraix service='TimestampService'>ms</sraix></set>
			</think>
		</template>
	</category>
	<category>
		<pattern>GetTimerMs</pattern>
		<template>
			<condition name='timer'>
				<li value='*'><calculate><get name='timer'/> * 1000 - (<sraix service='TimestampService'>ms</sraix> - <get name='timerstamp'/>)</calculate></li>
				<li>unknown</li>
			</condition>
		</template>
	</category>

	<category>
		<pattern>setselected <set>number</set> <set>number</set> <set>number</set></pattern>
		<template>
			<think>
				<set name='SelectedFace'><star/></set>
				<set><name>SelectedSlot<star/></name><star/> <star index='2'/> <star index='3'/></set>
				<gossip>Selected slot: <get><name>SelectedSlot<star/></name></get></gossip>
			</think>
		</template>
	</category>

	<category>
		<pattern>read</pattern>
		<topic>* ^</topic>
		<template><oob><takescreenshot token='Read'/></oob></template>
	</category>
	<category>
		<pattern>OOB ScreenshotReady Read *</pattern>
		<topic>* ^</topic>
		<template><srai>XRead <sraix service='BombDefuserAimlService'><topicstar/> <star/> 837 393 1118 393 833 679 1124 679</sraix></srai></template>
	</category>

	<category>
		<pattern>OOB DefuserSocketMessage *</pattern>
		<template></template>
	</category>

	<category>
		<pattern>SpeakNato *</pattern>
		<template>
			<think>
				<set var='chars'><explode><star/></explode></set>
				<set var='result'></set>
				<condition var='chars'>
					<li value='nil'></li>
					<li>
						<set var='char'><first><get var='chars'/></first></set>
						<set var='chars'><rest><get var='chars'/></rest></set>
						<set var='isnumber'><srai>XIsNumber <get var='char'/></srai></set>
						<condition var='isnumber'>
							<li value='true'><set var='result'><get var='result'/> &lt;say-as interpret-as='number'&gt;<get var='char'/>&lt;/say-as&gt;</set></li>
							<li><set var='result'><get var='result'/> <map name='NATOEncode'><get var='char'/></map></set></li>
						</condition>
						<loop/>
					</li>
				</condition>
			</think>
			<oob>
				<speak><s><get var='result'/></s></speak>
				<alt><star/></alt>
			</oob>
		</template>
	</category>
</aiml>
