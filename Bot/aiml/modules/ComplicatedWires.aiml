<?xml version='1.0' encoding='UTF-8'?>
<aiml>
	<category>
		<pattern>SelectingModule ComplicatedWires</pattern>
		<template>
			<think><set><name>ComplicatedWires<get name='module'/>Wires</name>0</set></think>
			<srai>SelectModule ComplicatedWires XS Complicated Wires</srai><reply>read</reply>
		</template>
	</category>

	<topic name='ComplicatedWires ^'>
		<category>
			<pattern>read</pattern>
			<template>
				<think><set name='ComplicatedWiresIndex'>unknown</set></think>
				<oob><takescreenshot token='Read'/></oob>
			</template>
		</category>

		<category>
			<pattern>XRead * XS *</pattern>
			<template>
				<think>
					<set><name>Focus<get name='module'/></name><star/></set>
					<set><name>ComplicatedWires<get name='module'/>Wires</name>0</set>
					<set><name>ComplicatedWires<get name='module'/>ToCut</name>nil</set>
				</think>
				<srai>ProcessWires <star index='2'/></srai>.
			</template>
		</category>

		<category>
			<pattern>DescribeWire nil</pattern>
			<template>plain white</template>
		</category>
		<category>
			<pattern>DescribeWire *</pattern>
			<template><star/></template>
		</category>

		<category>
			<pattern>ProcessWire *</pattern>
			<template>
				<think>
					<set var='n'><map name='successor'><get><name>ComplicatedWires<get name='module'/>Wires</name></get></map></set>
					<set><name>ComplicatedWires<get name='module'/>Wires</name><get var='n'/></set>
					<set><name>ComplicatedWires<get name='module'/>Wire<get var='n'/></name><star/></set>
					<!-- Determine whether this wire should be cut based on input from previous Complicated Wires modules. -->
					<condition><name>ComplicatedWiresShouldCut <star/></name>
						<li value='true'>
							<set><name>ComplicatedWires<get name='module'/>ToCut</name>
								<srai>XAppend <get var='n'/> XS <get><name>ComplicatedWires<get name='module'/>ToCut</name></get></srai>
							</set>
						</li>
					</condition>
				</think>
			</template>
		</category>
		<category>
			<pattern>ProcessWires * XS *</pattern>
			<template>
				<srai>ProcessWire <star/></srai>
				<srai>ProcessWires <star index='2'/></srai>
			</template>
		</category>
		<category>
			<pattern>ProcessWires *</pattern>
			<template>
				<srai>ProcessWire <star/></srai>
				<condition><name>ComplicatedWires<get name='module'/>ToCut</name>
					<li value='nil'><srai>GetFirstUnknownWire</srai></li>
					<li><srai>InterruptAsync CutWires</srai></li>
				</condition>
			</template>
		</category>

		<category>
			<pattern>cut ^</pattern>
			<template>
				<think>
					<set><name>ComplicatedWiresShouldCut <get name='ComplicatedWiresCurrentDescription'/></name>true</set>
					<!-- Cut all wires that match this description. -->
					<set><name>ComplicatedWires<get name='module'/>ToCut</name>nil</set>
					<set var='wire'>1</set>
					<set var='break'>false</set>
					<condition var='break' value='false'>
						<condition>
							<name>ComplicatedWires<get name='module'/>Wire<get var='wire'/></name>
							<value><get name='ComplicatedWiresCurrentDescription'/></value>
							<set><name>ComplicatedWires<get name='module'/>ToCut</name>
								<srai>XAppend <get var='wire'/> XS <get><name>ComplicatedWires<get name='module'/>ToCut</name></get></srai>
							</set>
						</condition>
						<condition var='wire'>
							<li><value><get><name>ComplicatedWires<get name='module'/>Wires</name></get></value><set var='break'>true</set></li>
							<li><set var='wire'><map name='successor'><get var='wire'/></map></set></li>
						</condition>
						<loop/>
					</condition>
				</think>
				<srai>InterruptAsync CutWires</srai>
			</template>
		</category>

		<category>
			<pattern>next</pattern>
			<template><srai>do not cut</srai></template>
		</category>
		<category>
			<pattern>skip</pattern>
			<template><srai>do not cut</srai></template>
		</category>
		<category>
			<pattern>do not cut ^</pattern>
			<template>
				<think>
					<set><name>ComplicatedWiresShouldCut <get name='ComplicatedWiresCurrentDescription'/></name>false</set>
				</think>
				<srai>GetFirstUnknownWire</srai>
			</template>
		</category>

		<category>
			<pattern>InterruptDone CutWires</pattern>
			<template>
				<!-- This needs to be an interrupt so that it will work correctly if there is already an interrupt in progress when the command is received. -->
				<condition><name>ComplicatedWires<get name='module'/>ToCut</name>
					<li value='nil'>
						<srai>GetFirstUnknownWire</srai>
						<srai>EndInterrupt</srai>
					</li>
					<li><srai>CutRemainingWires</srai></li>
				</condition>
			</template>
		</category>

		<category>
			<pattern>GetPressesToMoveTo *</pattern>
			<template>
				<think><set var='d'><srai>XSubtract <star/> XS <srai>XCoalesce <get><name>Focus<get name='module'/></name></get> XS 1</srai></srai></set></think>
				<condition var='d'>
					<li value='-5'>left left left left left</li>
					<li value='-4'>left left left left</li>
					<li value='-3'>left left left</li>
					<li value='-2'>left left</li>
					<li value='-1'>left</li>
					<li value='1'>right</li>
					<li value='2'>right right</li>
					<li value='3'>right right right</li>
					<li value='4'>right right right right</li>
					<li value='5'>right right right right right</li>
				</condition>
			</template>
		</category>

		<category>
			<pattern>CutRemainingWires</pattern>
			<template>
				<think>
					<set var='wire'><first><get><name>ComplicatedWires<get name='module'/>ToCut</name></get></first></set>
					<set><name>ComplicatedWires<get name='module'/>ToCut</name><rest><get><name>ComplicatedWires<get name='module'/>ToCut</name></get></rest></set>
				</think>
				<oob><sendinputs><srai>GetPressesToMoveTo <get var='wire'/></srai> a callback:cut</sendinputs></oob>
				<think>
					<set><name>Focus<get name='module'/></name><get var='wire'/></set>
					<set><name>ComplicatedWires<get name='module'/>Cut<get var='wire'/></name>true</set>
				</think>
			</template>
		</category>

		<category>
			<pattern>OOB DefuserCallback cut</pattern>
			<template>
				<!-- Find out whether we solved or struck. -->
				<oob><takescreenshot token='StrikeCheck'/></oob>
			</template>
		</category>
		<category>
			<pattern>OOB ScreenshotReady StrikeCheck *</pattern>
			<template>
				<think><set var='light'><sraix service='BombDefuserAimlService'>GetLightState <star/> 837 393 1118 393 833 679 1124 679</sraix></set></think>
				<condition var='light'>
					<li value='solved'>
						<think>
							<!-- Remember that any remaining wires shouldn't be cut. -->
							<set var='wire'>1</set>
							<set var='break'>false</set>
							<condition var='break' value='false'>
								<condition><name>ComplicatedWires<get name='module'/>Cut<get var='wire'/></name>
									<li value='true'></li>
									<li><set><name>ComplicatedWiresShouldCut <get><name>ComplicatedWires<get name='module'/>Wire<get var='wire'/></name></get></name>false</set></li>
								</condition>
								<condition var='wire'>
									<li><value><get><name>ComplicatedWires<get name='module'/>Wires</name></get></value><set var='break'>true</set></li>
									<li><set var='wire'><map name='successor'><get var='wire'/></map></set></li>
								</condition>
								<loop/>
							</condition>
						</think>
						Module complete.
						<srai>EndInterrupt</srai>
					</li>
					<li value='strike'>
						<think>
							<!-- Remember that the wire shouldn't be cut. -->
							<set var='wire'><get><name>Focus<get name='module'/></name></get></set>
							<set><name>ComplicatedWiresShouldCut <get><name>ComplicatedWires<get name='module'/>Wire<get var='wire'/></name></get></name>false</set>
						</think>
						Strike cutting wire <get var='wire'/>.
						<srai>EndInterrupt</srai>
					</li>
					<li>
						<srai>InterruptDone CutWires</srai>
					</li>
				</condition>
			</template>
		</category>

		<category>
			<pattern>GetFirstUnknownWire</pattern>
			<template>
				<think>
					<set var='wire'>1</set>
					<set var='result'>unknown</set>
					<set var='break'>false</set>
					<condition var='break' value='false'>
						<condition><name>ComplicatedWires<get name='module'/>Cut<get var='wire'/></name>
							<li value='true'></li>
							<li>
								<set var='description'><get><name>ComplicatedWires<get name='module'/>Wire<get var='wire'/></name></get></set>
								<condition><name>ComplicatedWiresShouldCut <get var='description'/></name>
									<li value='false'></li>
									<li value='true'></li>
									<li>
										<set var='result'><get var='description'/></set>
										<set var='break'>true</set>
									</li>
								</condition>
							</li>
						</condition>
						<condition var='wire'>
							<li><value><get><name>ComplicatedWires<get name='module'/>Wires</name></get></value><set var='break'>true</set></li>
							<li><set var='wire'><map name='successor'><get var='wire'/></map></set></li>
						</condition>
						<loop/>
					</condition>
				</think>
				<srai>DescribeWire <set name='ComplicatedWiresCurrentDescription'><get var='result'/></set></srai>
				<reply>cut</reply><reply>do not cut</reply>
			</template>
		</category>
	</topic>
</aiml>
